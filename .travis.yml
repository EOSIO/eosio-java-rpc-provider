language: android
jdk: oraclejdk8
env:
  global:
    - DATE=`date +"%Y-%m-%d-%H%M"`
    - ANDROID_API=28
    - EMULATOR_API=25
    - ANDROID_BUILD_TOOLS=28.0.3
    - ABI=x86_64
    - EMU_FLAVOR=default # use google_apis flavor if no default flavor emulator
    - ADB_INSTALL_TIMEOUT=10 # minutes
    - TOOLS=${ANDROID_HOME}tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}platform-tools:${PATH}
    - ARTIFACTORY_CONTEXT_URL=https://blockone.jfrog.io/blockone
    - ARTIFACTORY_REPO=android-libs-scratch-local
    - ARTIFACTORY_LIBS_PATH=https://blockone.jfrog.io/blockone/android-libs

dist: trusty
android:
  components:
    - tools
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'


before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
cache:
  directories:
  - $HOME/.gradle/caches/
  - $HOME/.gradle/wrapper/
  - $HOME/.android/build-cache

before_script:
  - echo no | ${ANDROID_HOME}tools/bin/avdmanager create avd --force -n test -k "system-images;android-$EMULATOR_API;$EMU_FLAVOR;$ABI" -c 10M
  - emulator -verbose -avd test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

before_install:
  - echo "artifactory_username=$ARTIFACTORY_USERNAME" > gradle.properties
  - echo "artifactory_password=$ARTIFACTORY_PASSWORD" >> gradle.properties
  - echo "artifactory_path_android_libraries=$ARTIFACTORY_LIBS_PATH" >> gradle.properties
  - echo "artifactory_contextURL=$ARTIFACTORY_CONTEXT_URL" >> gradle.properties
  - echo "artifactory_repo=$ARTIFACTORY_REPO" >> gradle.properties


install:
  - touch $HOME/.android/repositories.cfg
  - yes | sdkmanager "platform-tools" >/dev/null
  - yes | sdkmanager "build-tools;$ANDROID_BUILD_TOOLS" >/dev/null
  - yes | sdkmanager "tools" >/dev/null
  - yes | sdkmanager "platforms;android-$ANDROID_API" >/dev/null
  - yes | sdkmanager "platforms;android-$EMULATOR_API" >/dev/null #for matrix builds, we want to also install the matrix version.
  - yes | sdkmanager "system-images;android-$EMULATOR_API;$EMU_FLAVOR;$ABI" >/dev/null


script:
  - "./gradlew clean check --stacktrace"

before_deploy:
  - echo "artifactory_username=$ARTIFACTORY_USERNAME" > gradle.properties
  - echo "artifactory_password=$ARTIFACTORY_PASSWORD" >> gradle.properties
  - echo "artifactory_path_android_libraries=$ARTIFACTORY_LIBS_PATH" >> gradle.properties
  - echo "artifactory_contextURL=$ARTIFACTORY_CONTEXT_URL" >> gradle.properties
  - echo "artifactory_repo=$ARTIFACTORY_REPO" >> gradle.properties


deploy:
  - provider: script
    skip_cleanup: true
    script: "bash scripts/deploy-artifactory.sh 'android-libs-feature-local'"
    on:
      all_branches: true
      condition: ${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH} =~ ^feature\/.*$
  # develop deploys
  - provider: script
    skip_cleanup: true
    script: "bash scripts/deploy-artifactory.sh 'android-libs-dev-local'"
    on:
      branch:
        - develop
  # release branches and master
  - provider: script
    skip_cleanup: true
    script: "bash scripts/deploy-artifactory.sh 'android-libs-release-local'"
    on:
      all_branches: true
      condition: $TRAVIS_BRANCH == master || ${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH} =~ ^release\/.*$
  # tagged releases from master, go to distribution
  - provider: script
    skip_cleanup: true
    script: "bash scripts/deploy-artifactory.sh 'eosiojavarpcprovider-product-eosio-dist'"
    on:
      tags: true
      branch: master

after_deploy:
  - echo "cleaning up properties"
  - rm gradle.properties
